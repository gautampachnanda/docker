input {
    tcp {
        port => 5000
            type => syslog
    }
    udp {
        port => 5000
            type => syslog
    }
	file {
	    path => "/logs/*access*"
	    type => "nginx_access"
	 }
	 
 	file {
 	    path => "/logs/application.log"
 	    type => "application"
 	 }
}

filter {

	geoip {
	      source => "clientip"
	      target => "geoip"
	      add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
	      add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}"  ]
	    }
	    mutate {
	      convert => [ "[geoip][coordinates]", "float"]
	    }

  multiline {
    pattern => "^\!"
    what => "previous"
  }

  multiline {
    pattern => "^\s"
    what => "previous"
  }

  grok {
    #jav matches
    match => ["message","%{CISCO_REASON}%{SYSLOG5424SD:timestamp} %{JAVACLASS}"]
    match => ["message","%{URIHOST} %{SYSLOG5424SD} %{QS} Java%{URIPATHPARAM}"]
    #nginx matcher
    match => ["message","%{COMBINEDAPACHELOG}"]
    match => ["message","%{CISCO_REASON}%{SYSLOG5424SD} metrics: type=TIMER"]
  }

  date {
    locale => "en"
    match => ["timestamp", "[YYYY-MM-dd HH:mm:ss,SSS]","dd/MMM/yyyy:HH:mm:ss Z"]
    timezone => "Europe/London"
    target => "@timestamp"
    add_field => { "debug" => "timestampMatched"}
  }
}

output {
    elasticsearch {
	    host => "elasticsearch"
	    protocol => "http"
	 }
	 stdout { codec => rubydebug }
}